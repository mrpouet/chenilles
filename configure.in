#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)

AC_INIT(chenilles, git, [dev-team@chenilles.org], chenilles)

AC_CONFIG_SRCDIR(src/main.cpp)
AM_INIT_AUTOMAKE(foreign 1.5)
AC_CONFIG_HEADERS(config.h)

AC_DEFUN([AC_DEFINE_DIR], [
  prefix_NONE=
  exec_prefix_NONE=
  test "x$prefix" = xNONE && prefix_NONE=yes && prefix=$ac_default_prefix
  test "x$exec_prefix" = xNONE && exec_prefix_NONE=yes && exec_prefix=$prefix
dnl In Autoconf 2.60, ${datadir} refers to ${datarootdir}, which in turn
dnl refers to ${prefix}.  Thus we have to use `eval' twice.
  eval ac_define_dir="\"[$]$2\""
  eval ac_define_dir="\"$ac_define_dir\""
  AC_SUBST($1, "$ac_define_dir")
  AC_DEFINE_UNQUOTED($1, "$ac_define_dir", [$3])
  test "$prefix_NONE" && prefix=NONE
  test "$exec_prefix_NONE" && exec_prefix=NONE
])


################################################
#					       #
#  Checks for compiler characteristics         #
#					       #
################################################

AC_PROG_CXX

## If default C++ compiler is g++
## check version for including -Wextra and -march=native CXXFLAGS

if test "x${CXX}" = "xg++";then

   AC_MSG_CHECKING(g++ version)

   CXX_VERSION=`$CXX -dumpversion`
   
   AC_MSG_RESULT($CXX_VERSION)

   CXX_VERSION=`echo $CXX_VERSION | sed "s/\.//g"`

   if test $CXX_VERSION -ge 420;then
      CXXFLAGS="-march=native -Wextra ${CXXFLAGS}"
   elif test $CXX_VERSION -ge 400;then
      CXXFLAGS="-Wextra ${CXXFLAGS}"   
   fi

   CXXFLAGS="${CXXFLAGS} -pipe"
fi

## Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER(stdio.h, [], AC_MSG_FAILURE(stdio.h was not found))



################################################
#					       #
# Checks for SDL libraries and dev utilities   #
# 	     	 	       	   	       #
################################################

case "$host_os" in
freebsd*)
	AC_CHECK_PROGS(SDLCONFIG, sdl11-config)
;;
**)
	AC_CHECK_PROGS(SDLCONFIG, sdl-config)
;;
esac

if test "x${SDLCONFIG}" = "x";then
   AC_MSG_FAILURE(*** sdl-config/sdl11-config not found)
fi

CPPFLAGS=`${SDLCONFIG} --cflags`
INC_SDL="`${SDLCONFIG} --prefix`/include/SDL"

AC_MSG_CHECKING(SDL version)

SDL_VERSION=`${SDLCONFIG} --version`

AC_MSG_RESULT($SDL_VERSION)

SDL_VERSION=`echo ${SDL_VERSION} | sed "s/\.//g"`

if test $SDL_VERSION -lt 1210; then
   AC_MSG_FAILURE(*** SDL version seems to be >= 1.2.10)		
fi

# libm
AC_CHECK_LIB(m, sqrt, LDFLAGS="-lm", 
		AC_MSG_FAILURE(*** libm math API not found))

AC_CHECK_HEADER(math.h, [],AC_MSG_FAILURE(
			*** math.h header was not found))

## SDL
AC_CHECK_LIB(SDL, SDL_Init, LDFLAGS="${LDFLAGS} `${SDLCONFIG} --libs`", 
		  AC_MSG_FAILURE(*** SDL_Init subroutine not found))


## SDL image
AC_CHECK_LIB(SDL_image, IMG_Load, LDFLAGS="${LDFLAGS} -lSDL_image", 
			AC_MSG_FAILURE(
			*** sdl-image extension not found or didn't work))

AC_CHECK_HEADER(${INC_SDL}/SDL_image.h, [],AC_MSG_FAILURE(
				 *** SDL_image.h header was not found))
#TODO: Add it later
## SDL TTF			  
#AC_CHECK_LIB(SDL_ttf, TTF_Init, LDFLAGS="${LDFLAGS} -lSDL_ttf", 
#		      AC_MSG_FAILURE(
#		      *** sdl-ttf extension not found or didn't work))

AC_CHECK_HEADER(${INC_SDL}/SDL_ttf.h, [], AC_MSG_FAILURE(
			       *** SDL_ttf.h header was not found))

## SDL gfx
AC_CHECK_LIB(SDL_gfx, aalineColor, LDFLAGS="${LDFLAGS} -lSDL_gfx", 
		      AC_MSG_FAILURE(
		      *** sdl-gfx extension not found or didn't work))

AC_CHECK_HEADER(${INC_SDL}/SDL_gfxPrimitives.h, [],
					 AC_MSG_FAILURE(
*** SDL_gfxPrimitives.h header (part of SDL_gfx extension) was not found))

## libxml++

PKG_CHECK_MODULES(LIBXMLPP, libxml++-2.6)

LIBXMLPP_MINOR=`pkg-config libxml++-2.6 --modversion | cut -d '.' -f 2`

AC_DEFINE_UNQUOTED(XMLPP_MINOR, ${LIBXMLPP_MINOR}, 
				Define to libxml++-2.6 minor code version)


CXXFLAGS="${CXXFLAGS} -W -Wall"

AC_DEFINE_DIR(DATAROOTDIR, datarootdir,
The directory for installing read-only architecture-independent data)

AC_CONFIG_FILES([Makefile src/Makefile test/Makefile])

AC_OUTPUT


echo "***************************************************"
echo
echo "Configuration:"
echo
echo " ${PACKAGE_NAME} Version..... ${VERSION}"
echo " Compiler:................... ${CXX}"
echo " CXXFLAGS:................... ${CXXFLAGS}"
echo " Prefix:..................... ${prefix}"
echo " Binary dir:................. ${prefix}/bin"
echo " Data dir:................... ${datarootdir}"
echo
echo "***************************************************"